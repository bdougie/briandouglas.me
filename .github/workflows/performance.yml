name: Performance Monitoring

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports
          path: lighthouse-reports
          retention-days: 30

      - name: Comment PR with performance results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const reportsDir = './lighthouse-reports';
              if (!fs.existsSync(reportsDir)) {
                console.log('No lighthouse reports found');
                return;
              }
              
              const files = fs.readdirSync(reportsDir).filter(f => f.endsWith('.json'));
              if (files.length === 0) {
                console.log('No JSON reports found');
                return;
              }
              
              const report = JSON.parse(fs.readFileSync(path.join(reportsDir, files[0]), 'utf8'));
              const scores = report.categories;
              
              const comment = `## ðŸš€ Performance Results
              
              | Category | Score |
              |----------|--------|
              | Performance | ${Math.round(scores.performance.score * 100)}/100 |
              | Accessibility | ${Math.round(scores.accessibility.score * 100)}/100 |
              | Best Practices | ${Math.round(scores['best-practices'].score * 100)}/100 |
              | SEO | ${Math.round(scores.seo.score * 100)}/100 |
              
              ### Core Web Vitals
              - **LCP**: ${report.audits['largest-contentful-paint'].displayValue}
              - **FID**: ${report.audits['max-potential-fid']?.displayValue || 'N/A'}
              - **CLS**: ${report.audits['cumulative-layout-shift'].displayValue}
              
              ### Bundle Analysis
              - **Total Bundle Size**: ${report.audits['total-byte-weight'].displayValue}
              - **Unused JavaScript**: ${report.audits['unused-javascript']?.displayValue || 'N/A'}
              - **Speed Index**: ${report.audits['speed-index'].displayValue}
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error creating performance comment:', error);
            }

  bundle-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and analyze bundle
        run: |
          npm run build
          npx astro build --reporter=verbose
        env:
          NODE_ENV: production

      - name: Analyze bundle size
        run: |
          echo "## Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -d "dist/assets" ]; then
            echo "### JavaScript Files" >> $GITHUB_STEP_SUMMARY
            find dist/assets -name "*.js" -exec ls -lh {} \; | awk '{print "- " $9 ": " $5}' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### CSS Files" >> $GITHUB_STEP_SUMMARY
            find dist/assets -name "*.css" -exec ls -lh {} \; | awk '{print "- " $9 ": " $5}' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Total Size" >> $GITHUB_STEP_SUMMARY
            echo "- Total dist size: $(du -sh dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
          fi