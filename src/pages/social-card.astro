---
import Layout from '../layouts/Layout.astro';
import { generateSimpleCloudinaryOG } from '../utils/cloudinary';

// Example titles to showcase different card styles
const examples = [
  {
    title: "Social Card Preview",
    description: "Preview how your social cards appear"
  },
  {
    title: "Optimizing Bundle-Splitting",
    description: "A deep dive into reducing the main bundle by 82%"
  },
  {
    title: "Building Bulletproof Tests Without Mocks",
    description: "Learn how to create reliable, fast tests"
  },
  {
    title: "Getting Started with Astro",
    description: "A beginner's guide to the modern static site generator"
  }
];

// Generate URLs for each example
const cardUrls = examples.map(example => ({
  ...example,
  url: generateSimpleCloudinaryOG({
    title: example.title,
    description: example.description,
    site: 'briandouglas.me'
  })
}));

// Check if Cloudinary is configured
const isCloudinaryConfigured = !cardUrls[0].url.includes('/images/og-default.png');
---

<Layout title="Social Card Preview" description="Preview and test social media card generation">
  <article class="max-w-none prose prose-lg prose-invert">
    <h1 class="text-3xl font-bold mb-8">Social Card Preview</h1>
    
    {!isCloudinaryConfigured && (
      <div class="bg-yellow-900/50 border border-yellow-700 p-4 rounded-lg mb-8">
        <h3 class="text-yellow-200 mb-2 mt-0">⚠️ Cloudinary Not Configured</h3>
        <p class="text-yellow-100 mb-2">To enable dynamic social cards, add your Cloudinary cloud name to your environment:</p>
        <code class="block p-2 bg-gray-800 text-green-400 rounded">PUBLIC_CLOUDINARY_CLOUD_NAME=bdougie</code>
        <p class="text-yellow-100 mt-2 mb-0">Then upload <code>black-social-bg.png</code> to your Cloudinary account.</p>
      </div>
    )}
    
    <p class="text-gray-300 mb-8">
      This page demonstrates how social cards will appear when shared on Twitter, LinkedIn, Facebook, and other platforms. 
      Each card is 1200×630 pixels with white text on a black background.
    </p>

    <div class="space-y-12">
      {cardUrls.map((card, index) => (
        <div class="bg-gray-800/50 rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-2 text-white mt-0">{card.title}</h2>
          <p class="text-gray-400 text-sm mb-4">{card.description}</p>
          
          <div class="space-y-4">
            {/* Preview Image */}
            <div class="border border-gray-600 rounded-lg overflow-hidden bg-black">
              {isCloudinaryConfigured ? (
                <img 
                  src={card.url} 
                  alt={`Social card for: ${card.title}`}
                  class="w-full h-auto"
                  loading={index === 0 ? "eager" : "lazy"}
                />
              ) : (
                <div class="w-full aspect-[1200/630] bg-black flex items-center justify-center">
                  <div class="text-center px-8">
                    <div class="text-white text-4xl font-bold uppercase mb-4">
                      {card.title}
                    </div>
                    <div class="text-gray-400 text-lg">
                      briandouglas.me
                    </div>
                  </div>
                </div>
              )}
            </div>
            
            {/* URL Display */}
            <div class="bg-gray-900 p-3 rounded">
              <p class="text-xs text-gray-500 mb-1">Generated URL:</p>
              <code class="text-xs text-green-400 break-all block">
                {card.url}
              </code>
            </div>
          </div>
        </div>
      ))}
    </div>

    <div class="mt-12 p-6 bg-gray-800/30 rounded-lg">
      <h2 class="text-xl font-semibold mb-4 mt-0">How It Works</h2>
      <ul class="space-y-2 text-gray-300">
        <li>✓ Generates 1200×630px images (optimal for all social platforms)</li>
        <li>✓ Uses black background with white text for high contrast</li>
        <li>✓ Automatically uppercases titles for consistency</li>
        <li>✓ Handles long titles by splitting into multiple lines</li>
        <li>✓ Falls back to static generation if Cloudinary isn't configured</li>
      </ul>
    </div>

    <div class="mt-8 p-6 bg-gray-800/30 rounded-lg">
      <h2 class="text-xl font-semibold mb-4 mt-0">Platform Compatibility</h2>
      <div class="grid grid-cols-2 gap-4 text-sm text-gray-300">
        <div>
          <strong class="text-white">Twitter/X:</strong> ✓ Summary Card with Large Image
        </div>
        <div>
          <strong class="text-white">Facebook:</strong> ✓ Open Graph Image
        </div>
        <div>
          <strong class="text-white">LinkedIn:</strong> ✓ Article Preview
        </div>
        <div>
          <strong class="text-white">Discord:</strong> ✓ Link Embed
        </div>
      </div>
    </div>
  </article>
</Layout>