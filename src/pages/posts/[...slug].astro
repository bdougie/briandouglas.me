---
export async function getStaticPaths() {
  const posts = await Astro.glob('./**/*.md');
  
  return posts.map(post => {
    const [year, month, day, ...titleParts] = post.file.split('/').pop().replace('.md', '').split('-');
    return {
      params: {
        slug: `${year}/${month}/${day}/${titleParts.join('-')}`
      },
      props: {
        post
      }
    };
  });
}

const { post } = Astro.props;
const { Content } = post;

import Layout from '../../layouts/Layout.astro';
---

<Layout title={post.frontmatter.title} description={post.frontmatter.description}>
  <article>
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-highlight dark:text-highlight-light mb-4">
        {post.frontmatter.title}
      </h1>
      <time class="text-highlight-dark dark:text-text-light text-sm block mb-3">
        {new Date(post.frontmatter.date).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        })}
      </time>
      {post.frontmatter.description && (
        <p class="text-highlight dark:text-text-light text-lg mt-2">{post.frontmatter.description}</p>
      )}
    </header>
    
    <div class="prose prose-lg lg:prose-xl max-w-none dark:prose-invert">
      <Content />
    </div>
    
    <div class="mt-12 pt-6 border-t border-secondary">
      <a href="/posts" class="text-highlight hover:text-highlight-light transition-colors">
        &larr; Back to all posts
      </a>
    </div>
  </article>
</Layout>

<style>
  /* Base styles for markdown content */
  .prose {
    color: #C69749;
  }
  
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: #C69749;
    font-weight: 700;
    margin-top: 1.5em;
    margin-bottom: 0.75em;
  }

  .prose p {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    color: #C69749;
  }

  .prose a {
    color: #C69749;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s;
  }

  .prose a:hover {
    color: #D4AB6A;
  }

  .prose code {
    color: #C69749;
    background-color: #282A3A;
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
    font-size: 0.875em;
  }

  .prose pre {
    background-color: #282A3A;
    padding: 1.25em;
    border-radius: 0.5em;
    overflow-x: auto;
    margin: 1.5em 0;
  }

  .prose pre code {
    background-color: transparent;
    padding: 0;
    border-radius: 0;
    color: #C69749;
  }

  /* Dark mode overrides */
  .dark .prose {
    color: #E5E7EB;
  }

  .dark .prose h1,
  .dark .prose h2,
  .dark .prose h3,
  .dark .prose h4,
  .dark .prose h5,
  .dark .prose h6 {
    color: #D4AB6A;
  }

  .dark .prose p {
    color: #E5E7EB;
  }

  .dark .prose a {
    color: #D4AB6A;
  }

  .dark .prose a:hover {
    color: #E5E7EB;
  }

  .dark .prose code {
    color: #D4AB6A;
    background-color: #282A3A;
  }

  .dark .prose pre code {
    color: #D4AB6A;
  }
</style>