---
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { generateSimpleCloudinaryOG } from '../utils/cloudinary';

interface Props {
  title?: string;
  description?: string;
  isBlogPost?: boolean;
  frontmatter?: {
    title: string;
    description?: string;
    date?: string;
  };
}

const { 
  title = "bdougie on the internet", 
  description = "A blog managed by Brian Douglas",
  isBlogPost = false,
  frontmatter
} = Astro.props;

// Use frontmatter data for blog posts, fallback to props for other pages
const pageTitle = isBlogPost && frontmatter?.title ? frontmatter.title : title;
const pageDescription = isBlogPost && frontmatter?.description ? frontmatter.description : description;

// Get the canonical URL for the current page
const canonicalURL = new URL(Astro.url.pathname, Astro.site || 'https://briandouglas.me');

// Ensure we have a site URL for OG images
const siteUrl = Astro.site?.toString().replace(/\/$/, '') || 'https://briandouglas.me';

// Try to use Cloudinary for social cards if configured
const cloudinaryUrl = generateSimpleCloudinaryOG({
  title: pageTitle,
  description: pageDescription,
  site: 'briandouglas.me'
});

// Use Cloudinary if available, otherwise fall back to static OG images
let finalOgImageUrl = cloudinaryUrl;

if (cloudinaryUrl === '/images/og-default.png') {
  // Fallback to static OG image system if Cloudinary not configured
  if (isBlogPost && Astro.url.pathname.includes('/posts/')) {
    const postPath = Astro.url.pathname.replace(/^\/posts\//, '').replace(/\/$/, '');
    if (postPath) {
      finalOgImageUrl = `${siteUrl}/og-image/${postPath}/`;
    } else {
      finalOgImageUrl = `${siteUrl}/og-image/home/`;
    }
  } else {
    finalOgImageUrl = `${siteUrl}/og-image/home/`;
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes" />
    <meta name="theme-color" content="#282a3a" media="(prefers-color-scheme: dark)" />
    <meta name="theme-color" content="#f9fafb" media="(prefers-color-scheme: light)" />
    
    
    <link rel="icon" type="image/svg+xml" href="https://res.cloudinary.com/briandouglas/image/upload/f_auto,q_auto/briandouglas-me/favicon" />
    <link rel="icon" type="image/png" href="https://res.cloudinary.com/briandouglas/image/upload/f_auto,q_auto,w_32,h_32/briandouglas-me/favicon-png" />
    <link rel="apple-touch-icon" href="https://res.cloudinary.com/briandouglas/image/upload/f_auto,q_auto,w_180,h_180/briandouglas-me/apple-touch-icon" />
    
    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="Brian Douglas" href="/rss.xml" />
    <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin="anonymous" />
    <link rel="dns-prefetch" href="https://fonts.googleapis.com" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Basic Meta Tags -->
    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <meta name="author" content="Brian Douglas" />
    <meta name="robots" content="index, follow" />
    
    <!-- Open Graph / Social Media Meta Tags -->
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:type" content={isBlogPost ? "article" : "website"} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={finalOgImageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={pageTitle} />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@bdougieyo" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={pageDescription} />
    <meta name="twitter:image" content={finalOgImageUrl} />
    
    {isBlogPost && frontmatter?.date && (
      <meta property="article:published_time" content={new Date(frontmatter.date).toISOString()} />
    )}
    
    <link rel="canonical" href={canonicalURL} />
    <link rel="sitemap" href="/sitemap.xml" />
    <link rel="manifest" href="/manifest.json" />
    
    <!-- PWA Meta Tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content="bdougie" />
    
    <!-- Debug comment -->
    <!-- OG Image URL: {finalOgImageUrl} -->
    
    <!-- Structured Data -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": isBlogPost ? "BlogPosting" : "WebSite",
        ...(isBlogPost ? {
          "headline": pageTitle,
          "description": pageDescription,
          "author": {
            "@type": "Person",
            "name": "Brian Douglas"
          },
          "datePublished": frontmatter?.date ? new Date(frontmatter.date).toISOString() : undefined,
          "url": canonicalURL.toString()
        } : {
          "name": "bdougie on the internet",
          "url": canonicalURL.toString(),
          "description": pageDescription,
          "author": {
            "@type": "Person",
            "name": "Brian Douglas"
          }
        })
      })}
    </script>
    
    <!-- Service Worker Registration -->
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then(registration => {
              console.log('SW registered: ', registration);
            })
            .catch(registrationError => {
              console.log('SW registration failed: ', registrationError);
            });
        });
      }
    </script>
  </head>
  <body class="bg-black text-gray-300 min-h-screen" lang="en">
    <!-- Skip link for keyboard users -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-orange-500 text-white px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-600 z-50">Skip to main content</a>
    
    <div class="max-w-4xl mx-auto px-4 sm:px-6 py-8 sm:py-12">
      <header class="mb-16">
        <Navigation />
      </header>
      <main id="main-content" tabindex="-1">
        <slot />
      </main>
      <Footer />
    </div>
  </body>
</html>

<style is:global>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    overflow-x: hidden;
    width: 100%;
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    background-color: #000;
    color: #9ca3af;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden;
    width: 100%;
  }

  a {
    color: inherit;
    text-decoration: none;
  }

  h1, h2, h3, h4, h5, h6 {
    color: #fff;
    font-weight: 600;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  /* Prevent horizontal overflow from code blocks and pre elements */
  pre, code {
    max-width: 100%;
    overflow-x: auto;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  /* Ensure images don't overflow */
  img {
    max-width: 100%;
    height: auto;
  }

  /* Ensure tables are responsive */
  table {
    display: block;
    max-width: 100%;
    overflow-x: auto;
  }

  /* Screen reader only utility */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .focus\:not-sr-only:focus {
    position: static;
    width: auto;
    height: auto;
    padding: initial;
    margin: initial;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
</style>